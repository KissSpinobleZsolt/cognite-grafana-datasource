// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RelationshipsListTab equals with snapshot 1`] = `
<div
  className="full-width-row"
>
  <MultiSelectField
    datasource={
      CogniteDatasource {
        "backendSrv": Object {
          "datasourceRequest": [MockFunction],
        },
        "connector": Connector {
          "apiUrl": "/api/datasources/proxy/6",
          "backendSrv": Object {
            "datasourceRequest": [MockFunction],
          },
          "cachedRequest": [Function],
          "cachedRequests": Map {},
          "oauthClientCredentials": undefined,
          "oauthPassThru": false,
          "project": "TestProject",
        },
        "createRelationshipsNode": [Function],
        "fetchSingleAsset": [Function],
        "fetchSingleTimeseries": [Function],
        "getRelationshipsDropdownOptions": [Function],
        "id": 1,
        "meta": Object {},
        "name": "Cognite Test Data",
        "project": "TestProject",
        "templateSrv": Object {
          "replace": [MockFunction],
          "variables": Array [
            Object {
              "current": Object {
                "text": "asset1",
                "value": 123,
              },
              "name": "AssetVariable",
            },
            Object {
              "current": Object {
                "text": "timeseries1",
                "value": "Timeseries1",
              },
              "name": "TimeseriesVariable",
            },
            Object {
              "current": Object {
                "text": "asset2",
                "value": Array [
                  123,
                  456,
                ],
              },
              "name": "MultiValue",
            },
            Object {
              "current": Object {
                "text": "type",
                "value": "\\"type_or_subtype\\"",
              },
              "name": "Type",
            },
          ],
        },
        "type": "cognitedata-platform-datasource",
        "uid": undefined,
        "url": "/api/datasources/proxy/6",
      }
    }
    identifier="id"
    key="datasets"
    name="Dataset"
    onQueryChange={[Function]}
    relationsShipsQuery={
      Object {
        "dataSetIds": Array [],
        "labels": Object {
          "containsAll": Array [],
        },
      }
    }
    selector="dataSetIds"
    type="datasets"
  />
  <MultiSelectField
    datasource={
      CogniteDatasource {
        "backendSrv": Object {
          "datasourceRequest": [MockFunction],
        },
        "connector": Connector {
          "apiUrl": "/api/datasources/proxy/6",
          "backendSrv": Object {
            "datasourceRequest": [MockFunction],
          },
          "cachedRequest": [Function],
          "cachedRequests": Map {},
          "oauthClientCredentials": undefined,
          "oauthPassThru": false,
          "project": "TestProject",
        },
        "createRelationshipsNode": [Function],
        "fetchSingleAsset": [Function],
        "fetchSingleTimeseries": [Function],
        "getRelationshipsDropdownOptions": [Function],
        "id": 1,
        "meta": Object {},
        "name": "Cognite Test Data",
        "project": "TestProject",
        "templateSrv": Object {
          "replace": [MockFunction],
          "variables": Array [
            Object {
              "current": Object {
                "text": "asset1",
                "value": 123,
              },
              "name": "AssetVariable",
            },
            Object {
              "current": Object {
                "text": "timeseries1",
                "value": "Timeseries1",
              },
              "name": "TimeseriesVariable",
            },
            Object {
              "current": Object {
                "text": "asset2",
                "value": Array [
                  123,
                  456,
                ],
              },
              "name": "MultiValue",
            },
            Object {
              "current": Object {
                "text": "type",
                "value": "\\"type_or_subtype\\"",
              },
              "name": "Type",
            },
          ],
        },
        "type": "cognitedata-platform-datasource",
        "uid": undefined,
        "url": "/api/datasources/proxy/6",
      }
    }
    identifier="externalId"
    key="labels"
    name="Label"
    onQueryChange={[Function]}
    relationsShipsQuery={
      Object {
        "dataSetIds": Array [],
        "labels": Object {
          "containsAll": Array [],
        },
      }
    }
    selector="labels.containsAll"
    type="labels"
  />
</div>
`;
